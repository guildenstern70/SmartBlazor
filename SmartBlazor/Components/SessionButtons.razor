 @**
  
  Project SmartBlazor
  Copyright (C) 2022 Alessio Saltarin 'alessiosaltarin@gmail.com'
  This software is licensed under MIT License. See LICENSE.
  
 **@

@using SmartBlazor.Service

@inject ISessionService _sessionService
@inject ILogger<SessionButtons> _logger

<div class="@_hideOrNot">

    @if (_userSession == null)
    {
        <a href="/register" class="button is-info">
            <strong>Sign up</strong>
        </a>
        <a href="/login" class="button is-light">
            Log in
        </a>
    }
    else
    {
        <div class="mx-4"> Logged user: <strong>@_userSession</strong></div>
            <a href="/logout" class="button is-light">
            Log out
        </a>        
    }
            
</div>

@code 
{
    private string? _userSession;
    private string _hideOrNot = "buttons hidden";

    protected override async void OnAfterRender(bool firstRender)
    {
        this._userSession = await _sessionService.GetLoggedUser();
        // Force rendering since state has changed
        this._hideOrNot = "buttons";
        this.StateHasChanged();
    }


}
